@model Application.Models.POST

@{
    ViewBag.Title = "PostUpdateView";
}

<div class="card">
    <div class="card-header">
        <i class="fas fa-plus"></i>
        Cập nhật một sản phẩm
    </div>
    <div class="card-body">
        @using (Html.BeginForm("PostUpdate", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(z=>z.ID)
            <div class="form-group row">
                @Html.LabelFor(z => z.AVARTAR, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    <img src="~/img/images/@Model.AVARTAR" id="avatar" alt="avatar" width="200" height="200" />
                    <input class="custom-file" type="file" onchange="readURL(this);" />
                    @Html.HiddenFor(z => z.AVARTAR)
                    @Html.ValidationMessageFor(z => z.AVARTAR, "", new { @class = "text-danger" })
                    @if (ViewBag.Error != null)
                    {
                        <div class="text-danger">@ViewBag.Error</div>
                    }
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.TITLE, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(z => z.TITLE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(z => z.TITLE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.PRICE, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(z => z.PRICE, new { @class = "form-control", type = "number" })
                    @Html.ValidationMessageFor(z => z.PRICE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.ACTIVE, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-1">
                    @Html.CheckBoxFor(z => z.ACTIVE, new { @class = "form-control" })
                    @Html.ValidationMessageFor(z => z.ACTIVE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.CATE_ID, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.DropDownListFor(z => z.CATE_ID, new SelectList(ViewBag.CateList, "ID", "CATE_NAME"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(z => z.CATE_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.ID_TYPE, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-8">
                    @Html.DropDownListFor(z => z.ID_TYPE, new SelectList(ViewBag.TypeList, "ID", "NAME_TYPE"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(z => z.ID_TYPE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(z => z.OPTIONAL, new { @class = "col-sm-2 col-form-label" })
                @Html.ValidationMessageFor(z => z.OPTIONAL, "", new { @class = "text-danger" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(z => z.OPTIONAL, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(z => z.CONTENT, new { @class = "col-form-label" })
                @Html.TextAreaFor(z => z.CONTENT, new { @class = "form-control" })
                @Html.ValidationMessageFor(z => z.CONTENT, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-primary">Cập nhật</button>
        }
    </div>
</div>

@section scripts{
    <script>
        CKEDITOR.replace('CONTENT');

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#avatar')
                        .attr('src', e.target.result)
                        .width(200)
                        .height(200);
                };
                $('#AVARTAR').val(input.files[0].name);
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

